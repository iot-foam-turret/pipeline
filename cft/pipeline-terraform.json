{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Serverless deployment pipeline for Terraform projects",
  "Parameters": {
    "GithubOauthToken": {
      "Type": "String",
      "Description": "see http://docs.aws.amazon.com/codepipeline/latest/userguide/integrations-action-type.html for instructions"
    },
    "GithubRepoOwner": {
      "Type": "String",
      "Description": "The Github owner of the repository"
    },
    "GithubRepoName": {
      "Type": "String",
      "Description": "The GitHub repository where the Terraform files (to be executed) are located"
    },
    "GithubRepoBranch": {
      "Type": "String",
      "Default": "master",
      "Description": "The Git branch to be used"
    },
    "TerraformVersion": {
      "Type": "String",
      "Default": "0.12.8",
      "Description": "The Terraform version to use"
    },
    "TerraformSha256": {
      "Type": "String",
      "Default": "43806e68f7af396449dd4577c6e5cb63c6dc4a253ae233e1dddc46cf423d808b",
      "Description": "Terraform binary SHA256"
    },
    "TagName": {
      "Type": "String",
      "Description": "The owner's name"
    },
    "TagManager": {
      "Type": "String",
      "Description": "The owner's manager"
    },
    "TagMarket": {
      "Type": "String"
    },
    "TagEngagementOffice": {
      "Type": "String"
    },
    "TagEmail": {
      "Type": "String",
      "Description": "The owner's email"
    }
  },
  "Metadata": {
    "AWS::CloudFormation::Interface": {
      "ParameterGroups": [
        {
          "Label": {
            "default": "Source Code Repository"
          },
          "Parameters": [
            "GithubRepoOwner",
            "GithubRepoName",
            "GithubRepoBranch",
            "GithubOauthToken"
          ]
        },
        {
          "Label": {
            "default": "Terraform"
          },
          "Parameters": [
            "TerraformVersion",
            "TerraformSha256"
          ]
        }
      ]
    }
  },
  "Resources": {
    "TerraformStateBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "VersioningConfiguration": {
          "Status": "Enabled"
        },
        "BucketName": "iot-turret-terraform",
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Ref": "TagName" }
          },
          {
            "Key": "Manager",
            "Value": { "Ref": "TagManager" }
          },
          {
            "Key": "Market",
            "Value": { "Ref": "TagMarket" }
          },
          {
            "Key": "Engagement Office",
            "Value": { "Ref": "TagEngagementOffice" }
          },
          {
            "Key": "Email",
            "Value": { "Ref": "TagEmail" }
          }
        ]
      }
    },
    "ArtifactStoreBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "VersioningConfiguration": {
          "Status": "Enabled"
        },
        "BucketName": "iot-turret-artifacts",
        "AccessControl": "BucketOwnerFullControl",
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Ref": "TagName" }
          },
          {
            "Key": "Manager",
            "Value": { "Ref": "TagManager" }
          },
          {
            "Key": "Market",
            "Value": { "Ref": "TagMarket" }
          },
          {
            "Key": "Engagement Office",
            "Value": { "Ref": "TagEngagementOffice" }
          },
          {
            "Key": "Email",
            "Value": { "Ref": "TagEmail" }
          }
        ]
      }
    },
    "PipelineRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": {
            "Effect": "Allow",
            "Principal": {
              "Service": "codepipeline.amazonaws.com"
            },
            "Action": "sts:AssumeRole"
          }
        },
        "Path": "/",
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/AdministratorAccess"
        ]
      }
    },
    "Pipeline": {
      "Type": "AWS::CodePipeline::Pipeline",
      "Properties": {
        "RoleArn": { "Fn::GetAtt": ["PipelineRole", "Arn"] },
        "ArtifactStore": {
          "Location": { "Ref": "ArtifactStoreBucket" },
          "Type": "S3"
        },
        "Stages": [
          {
            "Name": "Source",
            "Actions": [
              {
                "InputArtifacts": [],
                "Name": "Source",
                "ActionTypeId": {
                  "Category": "Source",
                  "Owner": "ThirdParty",
                  "Version": 1,
                  "Provider": "GitHub"
                },
                "OutputArtifacts": [
                  {
                    "Name": "SourceOutput"
                  }
                ],
                "Configuration": {
                  "Owner": { "Ref": "GithubRepoOwner" },
                  "Repo": { "Ref": "GithubRepoName" },
                  "Branch": { "Ref": "GithubRepoBranch" },
                  "OAuthToken": { "Ref": "GithubOauthToken" }
                },
                "RunOrder": 1
              }
            ]
          },
          {
            "Name": "InvokeTerraform",
            "Actions": [
              {
                "Name": "InvokeTerraformAction",
                "ActionTypeId": {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Version": 1,
                  "Provider": "CodeBuild"
                },
                "OutputArtifacts": [
                  {
                    "Name": "InvokeTerraformOutput"
                  }
                ],
                "InputArtifacts": [
                  {
                    "Name": "SourceOutput"
                  }
                ],
                "Configuration": {
                  "ProjectName": "iot-turret-pipeline"
                },
                "RunOrder": 1
              }
            ]
          }
        ]
      }
    },
    "InvokeTerraformBuild": {
      "Type": "AWS::CodeBuild::Project",
      "Properties": {
        "Artifacts": {
          "Type": "CODEPIPELINE"
        },
        "Environment": {
          "Type": "LINUX_CONTAINER",
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": "aws/codebuild/eb-go-1.5-amazonlinux-64:2.1.3",
          "EnvironmentVariables": [
            {
              "Name": "TerraformStateBucket",
              "Type": "PLAINTEXT",
              "Value": { "Ref": "TerraformStateBucket" }
            },
            {
              "Name": "TerraformVersion",
              "Type": "PLAINTEXT",
              "Value": { "Ref": "TerraformVersion" }
            },
            {
              "Name": "TerraformSha256",
              "Type": "PLAINTEXT",
              "Value": { "Ref": "TerraformSha256" }
            }
          ]
        },
        "Name": "iot-turret-pipeline",
        "ServiceRole": { "Ref": "InvokeTerraformBuildRole" },
        "Source": {
          "Type": "CODEPIPELINE"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Ref": "TagName" }
          },
          {
            "Key": "Manager",
            "Value": { "Ref": "TagManager" }
          },
          {
            "Key": "Market",
            "Value": { "Ref": "TagMarket" }
          },
          {
            "Key": "Engagement Office",
            "Value": { "Ref": "TagEngagementOffice" }
          },
          {
            "Key": "Email",
            "Value": { "Ref": "TagEmail" }
          }
        ]
      }
    },
    "InvokeTerraformBuildRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": {
            "Effect": "Allow",
            "Principal": {
              "Service": "codebuild.amazonaws.com"
            },
            "Action": "sts:AssumeRole"
          }
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/PowerUserAccess"
        ]
      }
    }
  }
}